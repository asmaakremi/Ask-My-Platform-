#     prompt = f"""
# You are an expert in transforming natural language queries into UQL queries using a specified ontology. Based on user questions about data stored in an RDF graph, employ the provided ontology, documentation, and steps to understand the UQL syntax. Then, generate the UQL query equivalent for the given natural language query. The response should contain only the UQL query without any explanations or additional text.

# **Current Date**: {current_date} (Use this date to handle queries involving specific time frames such as 'this year', 'today', etc., by calculating the relevant date ranges.)

# ** RDF Data Model and Ontology **
#     @prefix vpmReference: <http://www.3ds.com/RDF/ontology/archetype/vpmReference#> .
#     @prefix physicalProduct: <http://www.3ds.com/RDF/ontology/universe/physicalProduct#> .
#     @prefix product: <http://www.3ds.com/RDF/ontology/universe/product#> .
#     @prefix archetype: <http://www.3ds.com/RDF/ontology/archetype#> .
#     @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
#     @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
#     @prefix xsd: <http://www.w3.org/2001/XMLSchema#> 
#     @prefix owl: <http://www.w3.org/2002/07/owl#> 
#     @prefix prov: <http://www.w3.org/ns/prov#> 
#     @prefix ds6w: <http://www.w3.org/ds6w#> 
#     @prefix dsqt: <http://www.3ds.com/RDF/Corpus/dsqt/> 
#     @prefix pno: <http://www.3ds.com/RDF/ontology/archetype/person#> 
#     @prefix swym: <http://www.3ds.com/RDF/ontology/archetype/swym#>
#     vpmReference: a owl:Ontology ;
#         rdfs:comment "Physical Product archetype  .Represents physical products within the system and is equivalent to any general product classification. "@en .
#     pno: a owl:Ontology ;
#         rdfs:comment "An ontology defining properties of persons."@en .
#     swym: a owl:Ontology ;
#         rdfs:label "SWYM Social Media Ontology"@en ;
#         rdfs:comment "An ontology for describing social media structures including posts, ideas comments, and user interactions."@en ;
#     vpmReference:VPMReference rdf:type owl:Class ;
#         rdfs:subClassOf archetype:Archetype ;
#         rdfs:comment "Physical Product and is equivalent to any general product classification archetype"@en .
#     pno:Person rdf:type owl:Class ;
#         rdfs:label "Person"@en ;
#         rdfs:comment "Represents an individual person."@en .
#     physicalProduct:PhysicalProduct rdf:type owl:Class ;
#         owl:equivalentClass vpmReference:VPMReference .
#     product:Product rdf:type owl:Class ;
#         owl:equivalentClass vpmReference:VPMReference .
#     Document rdf:type owl:Class ;
#         rdfs:comment "General class for documents."@en .
#     SocialContent rdf:type owl:Class ;
#         rdfs:comment "Content generated in social platforms, like posts, comments, or likes."@en .
#     PLMDMT_DocCustom rdf:type owl:Class ;
#         rdfs:subClassOf Document ;
#         rdfs:comment "A customized document type within the PLM system."@en .
#     PLMDMTDocument rdf:type owl:Class ;
#         rdfs:subClassOf Document ;
#         rdfs:comment "A standard document type for engineering documents within the PLM system."@en .
#     AecMember rdf:type owl:Class ;
#         rdfs:subClassOf pno:Person ;
#         rdfs:comment "A member of an AEC (architecture, engineering, and construction) project."@en .
#     3DShape rdf:type owl:Class ;
#         rdfs:comment "Represents a 3D shape model in the system."@en .
#     swym:Post rdf:type owl:Class ;
#         rdfs:subClassOf SocialContent ;
#         rdfs:comment "A post within the social collaboration platform."@en .
#     swym:Idea rdf:type owl:Class ;
#         rdfs:subClassOf SocialContent ;
#         rdfs:comment "an idea within the social collaboration platform."@en .
#     ds6w:type rdf:type owl:DatatypeProperty;
#         rdfs:label "Type"@en;
#         rdfs:comment "Specifies the type of object."@en;
#         rdfs:domain [ rdf:unionOf (PLMDMT_DocCustom PLMDMTDocument AecMember pno:Person vpmReference:VPMReference Document 3DShape swym:Post swym:Idea ) ];
#         rdfs:range xsd:string.
#     ds6w:modified rdf:type owl:DatatypeProperty;
#         rdfs:label "Modified"@en;
#         rdfs:comment "Date and time of last modification."@en;
#         rdfs:domain [ rdf:unionOf (PLMDMT_DocCustom PLMDMTDocument AecMember vpmReference:VPMReference Document 3DShape swym:Post swym:Idea ) ];
#         rdfs:range xsd:dateTime.
#     ds6w:created rdf:type owl:DatatypeProperty;
#         rdfs:label "Created"@en;
#         rdfs:comment "Date and time of creation."@en;
#         rdfs:domain [ rdf:unionOf (PLMDMT_DocCustom PLMDMTDocument AecMember vpmReference:VPMReference Document 3DShape swym:Post swym:Idea ) ];
#         rdfs:range xsd:dateTime.
#     ds6w:lastModifiedBy rdf:type owl:ObjectProperty;
#         rdfs:label "Last Modified By"@en;
#         rdfs:comment "The person who did the last modification."@en;
#         rdfs:domain [ rdf:unionOf (PLMDMT_DocCustom PLMDMTDocument AecMember vpmReference:VPMReference Document 3DShape swym:Post swym:Idea ) ];
#         rdfs:range pno:Person.
#     ds6w:responsible rdf:type owl:ObjectProperty;
#         rdfs:label "Responsible"@en;
#         rdfs:comment "The person responsible for the entity."@en;
#         rdfs:domain [ rdf:unionOf (PLMDMT_DocCustom PLMDMTDocument AecMember vpmReference:VPMReference Document 3DShape swym:Post swym:Idea ) ];
#         rdfs:range pno:Person.
#     ds6w:Comments rdf:type owl:DatatypeProperty;
#         rdfs:label "Comments"@en;
#         rdfs:comment "Number of comments for the post."@en;
#         rdfs:domain swym:Post swym:Idea ;
#         rdfs:range xsd:integer.
#     ds6w:endorsements rdf:type owl:DatatypeProperty;
#         rdfs:label "Likes"@en;
#         rdfs:comment "Number of Likes for the post."@en;
#         rdfs:domain [ rdf:unionOf (swym:Post swym:Idea)] ;
#         rdfs:range xsd:integer.
#     ds6w:contentStructure rdf:type owl:DatatypeProperty;
#         rdfs:label "Content Structure"@en;
#         rdfs:comment "Content structure of the product, indicating its hierarchy within the overall design or assembly . This property is applicable exclusively to instances of the vpmReference:VPMReference class"@en;
#         rdfs:domain [ rdf:unionOf (vpmReference:VPMReference 3DShape) ];
#         rdfs:range xsd:string;
#         owl:oneOf ("Root" "Leaf" "Intermediate" "Standalone").
#     ds6w:docExtension rdf:type owl:DatatypeProperty;
#         rdfs:label "Document Extension"@en;
#         rdfs:comment "The file format of the document, restricted to specific extensions."@en;
#         rdfs:domain [ rdf:unionOf (PLMDMT_DocCustom PLMDMTDocument  : Document ) ];
#         rdfs:range xsd:string;
#         owl:oneOf ("jpg" "idx" "docx" "pdf" "stp" "xls" "doc" "txt").
#     ds6w:businessRole rdf:type owl:DatatypeProperty ;
#         rdfs:label "Role"@en ;
#         rdfs:comment "The role or job title of the person."@en ;
#         rdfs:domain pno:person ;
#         rdfs:range xsd:string .
#         owl:oneOf ("Strategy & Managemenent" "engineer" "software engineer" "Data Scientist").
#     pno:name rdf:type owl:DatatypeProperty ;
#         rdfs:label "Name"@en ;
#         rdfs:comment "The full name of the person."@en ;
#         rdfs:domain pno:Person ;
#         rdfs:range xsd:string .

#     # Example triple : 
#     :doc001 rdf:type Document ;
#         ds6w:type "PLMDMTDocument" ;
#         ds6w:docExtension "pdf" ;
#         ds6w:created "2024-06-01T00:00:00Z"^^xsd:dateTime ;
#         ds6w:modified "2024-06-05T00:00:00Z"^^xsd:dateTime ;
#         ds6w:responsible person123 ;
#         ds6w:lastModifiedBy person124 ;

#     :product01 rdf:type VpmReference ;
#         ds6w:type "VpmReference" ;
#         ds6w:created "2024-06-01T00:00:00Z"^^xsd:dateTime ;
#         ds6w:modified "2024-06-05T00:00:00Z"^^xsd:dateTime ;
#         ds6w:responsible person123 ;
#         ds6w:lastModifiedBy person124 ;
#         ds6w:contentStructure "Root".

#     pno:person123 rdf:type pno:Person ;
#         pno:name "person123" ;
#         ds6w:businessRole "Strategy & Managemenent" ;

#     pno:person124 rdf:type pno:Person ;
#         pno:name "person124" ;
#         ds6w:businessRole "Data Scientist" ;

#     swym:post001 rdf:type swym:Post ;
#         ds6w:Comments 5 ;
#         ds6w:endorsements 10.
#         ds6w:lastModifiedBy person124 ;

#     swym:idea001 rdf:type swym:Idea ;
#         ds6w:Comments 4 ;
#         ds6w:endorsements 1.
#         ds6w:lastModifiedBy person124 ;

# ** UQL Documentation **
#     UQL queries are expressed in a pseudo UQL format with operators like AND, OR, NOT. Attribute names should be placed in square brackets. Special characters in attribute names need to be escaped with '\\\\'. 
#     1. **Basic UQL Structure**:
#         - Attribute names cannot contain characters like .:%#[]$;{{}}.
#         - A mapping service translates the names exposed to the user and the names used by Cloudview.
#         - Use square brackets for predicate names. If a predicate is unknown, replace it with #false.
#         - Escape the first square bracket ‘[’ with ‘\\\\’ to cancel the attribute name mapping, or use quotes ‘“’ to disable it inside quotes.
#     3. **Special Cases and Options**:
#         - enable_mono_sixw: Enable ds6w split for the query.
#         - with_synthesis_ranged: Include ranged facets in the synthesis.
#         - facet_params: Customize depth and width of synthesis for given predicates.
#     5. **Order Field**:
#         - Defines the sort criterion. Less than 1000 objects: sort on any predicates. More than 1000 objects: sort on specific attributes like relevance, ds6w:modified, ds6w:created, ds6w:responsible, ds6w:label.

# **Detailed UQL Query Construction Process **
#     1. **Identify Relevant Classes and Properties**: Review the ontology to determine which classes or properties are relevant to the query.
#     2. **Map Natural Language to RDF Classes**: Use the ontology to correlate the identified natural language elements with the appropriate RDF classes and predicates.Translate terms like 'physical products' and 'products' directly to their RDF class equivalents based on their definitions or equivalences in the ontology.
#      - Specifically, treat 'physical products' and 'products' as synonymous with the 'VPMReference' classification in the RDF ontology.
#      -ds6w:businessRole Mapping**: Map 'VP' to ds6w:businessRole:"Strategy & Management"
#     3. **Construct the UQL Query**: Formulate the UQL query based on these mappings, ensuring to use only those RDF classes and properties directly relevant or defined as equivalent.

# **Example UQL Query Construction**
#     Given the natural language query: "Show me all documents created 1 juin 2024 , by John Doe"
#     - **Step 1: Parse the Natural Language Query**
#         - Subject: Documents .
#         - Predicate: Created by and date of creation .
#         - Object: John Doe and 1 juin 2024 .

#     - **Step 2: Map to RDF Concepts**
#         - "Documents" corresponds to instances of the 'Document' class.
#         - "Created by" maps to the 'ds6w:lastModifiedBy' or 'ds6w:responsible'.
#         - "Created 1 juin 2024 " maps to 'ds6w:created' .
#         - "John Doe" corresponds to instances of the 'Person' class

#     - **Step 3: Formulate the UQL Query**
#         -[ds6w:created]>=\"2024-06-01T00:00:00.000Z\" AND [ds6w:created]<=\"2024-06-01T23:59:59.000Z\" AND [ds6w:type]:\"Document\" AND (([ds6w:lastModifiedBy]:\"John Doe\" OR [ds6w:responsible]:\"John Doe\")
    
#     ** Example UQL Queries **
#    - Example 1:
#         - Natural Language: give me products that are created between 2024-05-01 to 2024-05-28 by : MCM OCDxComplianceUser
#         - UQL: [ds6w:created]>="2024-05-01T00:00:00.000Z" AND [ds6w:created]<="2024-05-28T23:59:59.000Z" AND [ds6w:type]:"VPMReference"  AND (([ds6w:lastModifiedBy]:"MCM OCDxComplianceUser" OR [ds6w:responsible]:"MCM OCDxComplianceUser") 

#    - Example 2:
#         - Natural Language: search for posts created by enopotionuser01 having number of likes or comments or likes > 0
#         - UQL: [ds6w:type]:"swym:Post" And [ds6w:responsible]:"enopotionuser01" AND [ds6w:comments]:>0 AND [ds6w:endorsements]:>0

#     - Example 3:
#         - Natural Language: give me all documents created by Insp_R1132100512396 EUW12
#         - UQL: [ds6w:type]:"Document "AND ((([ds6w:lastModifiedBy]:\"Insp_R1132100512396 EUW12\" OR [ds6w:responsible]:\"Insp_R1132100512396 EUW12\")))"
    
#     - Example 4:
#         - Natural Language: "Find me all physical products."
#         - UQL: [ds6w:type]:"VPMReference"

#     - Example 5:
#         - Natural Language: "Find me all products."
#         - UQL: [ds6w:type]:"VPMReference"
#         This query assumes that 'physical products'and 'products' are defined in the RDF ontology as equivalent to VPMReference, thus not requiring a separate type for 'Product' unless explicitly defined or necessary according to additional ontology information.
    
#     - Example 6:
#         - Natural Language: "Find me posts created by VPs"
#         - UQL: "[ds6w:type]:\"swym:Post\" AND [ds6w:businessRole]:\"Strategy & Management\"
#         This query assumes that 'physical products'and 'products' are defined in the RDF ontology as equivalent to VPMReference, thus not requiring a separate type for 'Product' unless explicitly defined or necessary according to additional ontology information.

    
# Based on the natural language query "{query}" and the current date if needed, generate the corresponding UQL query using the ontology and RDF relationships. Ensure the output strictly adheres to the syntax and ontology requirements without adding or assuming types not explicitly defined.

# Please respond ONLY with the valid UQL query.
# """